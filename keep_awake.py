import ctypes
import time
import sys
import os
import threading
import winsound
from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume
from comtypes import CLSCTX_ALL


# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –Ω–∞ 100%
def set_volume_100():
    devices = AudioUtilities.GetSpeakers()
    interface = devices.Activate(IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
    volume = interface.QueryInterface(IAudioEndpointVolume)
    volume.SetMasterVolumeLevelScalar(1.0, None)  # 1.0 = 100%

# –ö–ª–∞—Å—Å –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞ –≤ —Ü–∏–∫–ª–µ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
class LoopingSoundPlayer(threading.Thread):
    def __init__(self, wav_path):
        super().__init__()
        self.wav_path = wav_path
        self._running = True
        self.daemon = True

    def run(self):
        while self._running:
            winsound.PlaySound(self.wav_path, winsound.SND_FILENAME)

    def stop(self):
        self._running = False
        winsound.PlaySound(None, winsound.SND_PURGE)

def prevent_sleep():
    try:
        # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã Windows API
        ES_CONTINUOUS = 0x80000000
        ES_SYSTEM_REQUIRED = 0x00000001
        ES_DISPLAY_REQUIRED = 0x00000002

        class SYSTEM_POWER_STATUS(ctypes.Structure):
            _fields_ = [
                ("ACLineStatus", ctypes.c_byte),
                ("BatteryFlag", ctypes.c_byte),
                ("BatteryLifePercent", ctypes.c_byte),
                ("SystemStatusFlag", ctypes.c_byte),
                ("BatteryLifeTime", ctypes.c_ulong),
                ("BatteryFullLifeTime", ctypes.c_ulong),
            ]

        def is_on_ac_power():
            status = SYSTEM_POWER_STATUS()
            if ctypes.windll.kernel32.GetSystemPowerStatus(ctypes.byref(status)):
                return status.ACLineStatus == 1
            return False

        alert_wav_path = os.path.join(os.getcwd(), "alert.wav")
        if not os.path.isfile(alert_wav_path):
            print(f"[!] –§–∞–π–ª alert.wav –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {alert_wav_path}")
            play_sound = False
        else:
            play_sound = True

        sound_thread = None
        previous_state = None

        # –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å–æ–Ω –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞
        ctypes.windll.kernel32.SetThreadExecutionState(
            ES_CONTINUOUS | ES_SYSTEM_REQUIRED | ES_DISPLAY_REQUIRED
        )

        print("‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞.")
        print("üì° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–∏—Ç–∞–Ω–∏—è –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞.\n")

        while True:
            now_on_ac = is_on_ac_power()

            if previous_state is None:
                previous_state = now_on_ac

            if now_on_ac != previous_state:
                if not now_on_ac:
                    print("‚ö†Ô∏è  –ü–∏—Ç–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ! –ó–∞–ø—É—Å–∫ —Å–∏–≥–Ω–∞–ª–∞.")
                    set_volume_100()
                    if play_sound:
                        if sound_thread and sound_thread.is_alive():
                            sound_thread.stop()
                            sound_thread.join()
                        sound_thread = LoopingSoundPlayer(alert_wav_path)
                        sound_thread.start()
                else:
                    print("üîå –ü–∏—Ç–∞–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏–≥–Ω–∞–ª–∞.")
                    if sound_thread:
                        sound_thread.stop()
                        sound_thread.join()
                        sound_thread = None

                previous_state = now_on_ac

            # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
            if int(time.time()) % 10 == 0:
                ctypes.windll.kernel32.SetThreadExecutionState(
                    ES_CONTINUOUS | ES_SYSTEM_REQUIRED | ES_DISPLAY_REQUIRED
                )

            time.sleep(1)

    except KeyboardInterrupt:
        ctypes.windll.kernel32.SetThreadExecutionState(ES_CONTINUOUS)
        if sound_thread:
            sound_thread.stop()
            sound_thread.join()
        print("\n–†–µ–∂–∏–º –ø–∏—Ç–∞–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.")
        sys.exit(0)

if __name__ == "__main__":
    if ctypes.windll.shell32.IsUserAnAdmin():
        prevent_sleep()
    else:
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
        sys.exit(1)