# logger.py
import os
import sys
from datetime import datetime
from loguru import logger

# üìÅ –ü–∞–ø–∫–∞ –¥–ª—è –ª–æ–≥–æ–≤
os.makedirs("logs", exist_ok=True)

# üïì –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –ª–æ–≥-—Ñ–∞–π–ª–∞
timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
log_path = f"logs/log_{timestamp}.log"

# ‚ùå –£–¥–∞–ª–∏–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —Ö–µ–Ω–¥–ª–µ—Ä
logger.remove()


# –ü–∞—Ç—á: –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–∞–∂–¥—ã–π –ª–æ–≥ –ø—É—Å—Ç–æ–π device_id, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
def enrich_device_id(record):
    if "device_id" not in record["extra"]:
        record["extra"]["device_id"] = ""


logger = logger.patch(enrich_device_id)

# –§–æ—Ä–º–∞—Ç –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ —Å device_id (–±—É–¥–µ—Ç –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ device_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)
console_format = (
    "<green>{time:HH:mm:ss}</green> | <level>{level: <8}</level> | "
    "[{extra[device_id]}] "
    "{message}"
)

# ‚úÖ –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –ª–æ–≥ —Å —Ü–≤–µ—Ç–æ–º
logger.add(sys.stdout, format=console_format, colorize=True)

# üìù –¢–µ–∫—Å—Ç–æ–≤—ã–π –ª–æ–≥ –≤ —Ñ–∞–π–ª (–±–µ–∑ —Ü–≤–µ—Ç–∞, –ø—Ä–æ—Å—Ç–æ–π —Ñ–æ—Ä–º–∞—Ç)
file_format = (
    "{time:YYYY-MM-DD HH:mm:ss} | {level: <8} | [{extra[device_id]}] {message}"
)
logger.add(
    log_path,
    format=file_format,
    colorize=False,
    encoding="utf-8",
    rotation="2 MB",
    compression="zip",
    enqueue=True,
)

# üîÑ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä
__all__ = ["logger"]